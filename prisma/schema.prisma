generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model BookMark {
  id String @id @default(cuid())
  title String 

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @default(now()) @map("updated_at")

  folders Folder[]

  @@map("book_mark")
}


model Folder {
  id          String       @default(cuid()) @id
  title       String    @unique
  itemsCount  Int       @default(0) @map("items_count")

  bookMarkId String @map("book_mark_id")

  bookMark BookMark? @relation(fields: [bookMarkId], references: [id])


  rows        Row[]

  statistics  Statistics? 

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @default(now()) @map("updated_at") 

  @@map("folder")
}



model Row {
  id          String     @default(cuid()) @id
  word        String  
  translation String  
  transcription String 

  folder      Folder? @relation(fields: [folderId], references: [id])
  folderId    String?  @map("folder_id")

  bookMarkId String @map("book_mark_id")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @default(now()) @map("updated_at") 

  @@map("row")
}

model Statistics {
  folderId              String      @map("folder_id") @id
  folder                Folder?   @relation(fields: [folderId], references: [id])
  sessions              Int       @default(0)
  createdAt  DateTime   @db.Date  @map("created_at")
  updatedAt DateTime @updatedAt @default(now())  @map("updated_at") 
  presentOfCorrectUnswers Int @default(0) @map("present_of_correct_unswers")
  lastSession DateTime?   @map("last_session") 
  createdRows          Int       @default(0) @map("created_rows")
  deletedRows          Int       @default(0) @map("deleted_rows")
  rowsCount             Int       @map("rows_count") @default(0)
  timeToNextSession DateTime? @map("time_to_next_session") 
  duration Int @default(0)
  @@map("statistics")
}


model Notifications {
  id String @id @default(cuid())
  message String
  location String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("notifications")
}